Namespace xmq.administration

struct Property
%{
    String key;
	String value;
%} : read write size;

enum MessageType
%{
    None,
    Connect,
    Disconnect,
    ConnectionInfo
%}

enum ConnectionType
%{
    Bus,
    Client,
    Module,
%}

struct BaseMessage
%{
    MessageType messageType;
%} : read write size;

struct ConnectMessage : BaseMessage base { messageType = MessageType.Connect }
%{
%} : read write size;

struct DisconnectMessage : BaseMessage base { messageType = MessageType.Disconnect }
%{
%} : read write size;

struct ConnectionInfoMessage : BaseMessage base { messageType = MessageType.ConnectionInfo }
%{
    ConnectionType type;
    String name;
    bool connected;
    Array Property settingsCollection;
%} : read write size;

## Namespace xmq
## 
## import def.met
## 
## struct SubStruct
## %{
##     String subString;
## %} : read write size;
## 
## struct BaseStruct
## %{
##     String bs;
##     int32 bi;
## %} : read write size;
## 
## struct TestStruct : BaseStruct
## %{
##     Array xmq.def.SubStruct sd;
##     Array SubStruct sx;
##     Array String as;
##     String s;
##     int32 i;
## %} : read write size;


