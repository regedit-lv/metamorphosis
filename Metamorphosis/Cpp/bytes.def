## size

method size param = void
method size returnType = size_t
method size body = 
!{
%body%

return %return%;
!}

method size body return = !{0 %%!}

method size body return enum = !{ + sizeof(%type%)!}
method size body return default = !{ + sizeof(%type%)!}
method size body return string = !{ + (2 + %field%.size())!}
method size body return struct = !{ + %field%.size()!}
method size body return array = !{ + s_%field%!}
method size body return array default = !{ + (sizeof(size_t) + sizeof(%type0%) * %field%.size())!}
method size body body array default = !{ !}
method size body return map = !{ + s_%field%!}

method size body body = !{%%!}

method size body body array = !{
size_t s_%field% = sizeof(size_t);
{
    for (size_t i = 0; i < %field%.size(); i++)
    {
        %!Larva.SubLarvae[0].TypeDefinition% &%_e_name% = %field%[i];
        
        %#method size body body#%_e_name%#%!Larva.SubLarvae[0].FullName%#%
        
        s_%field% += 0 %#method size body return#%_e_name%#%!Larva.SubLarvae[0].FullName%#%;
    }
}
!}

method size body return arrayMethod = !{totalSize_%field_id%!}

method size body body map = !{
size_t s_%field% = sizeof(size_t);
{
    for (%!Larva.TypeDefinition%::iterator it = %field%.begin(); it != %field%.end(); ++it)        
    {
        const %!Larva.SubLarvae[0].TypeDefinition% &%_e_key% = it->first;
        const %!Larva.SubLarvae[0].TypeDefinition% &%_e_value% = it->second;
        
        %#method size body body#%_e_key%#%!Larva.SubLarvae[0].FullName%#%
        %#method size body body#%_e_value%#%!Larva.SubLarvae[1].FullName%#%
        
        s_%field% += 0 %#method size body return#%_e_key%#%!Larva.SubLarvae[0].FullName%#%
                       %#method size body return#%_e_value%#%!Larva.SubLarvae[1].FullName%#%;
    }
}
!}

## write

method write param = !{void **data!}
method write returnType = size_t

method write body =
!{
ByteWriter writer(*data, size());

%% 

if (*data == NULL)
{
    *data = writer.getData();
    writer.giveBufferOwnership();
}

return writer.getDataSize();
!}

method write body enum = !{writer.write<%type%>(%field%);!}
method write body default = !{writer.write<%type%>(%field%);!}
method write body string = !{writer.writeString(%field%);!}

method write body struct = !{ 
void *p_%field% = writer.getPosition();
%field%.write(&p_%field%);
writer.skipBytes(%field%.size()); 
!}

method write body array default = !{
// write array %field%
writer.write<size_t>(%field%.size());
writer.writeBytes(%field%.data(), sizeof(%type0%) * %field%.size() );
!}

method write body array = !{ 
// write array %field%
writer.write<size_t>(%field%.size());

for (size_t i = 0; i < %field%.size(); i++)
{
    %!Larva.SubLarvae[0].TypeDefinition% &%_e_name% = %field%[i];
        
    %#method write body#%_e_name%#%!Larva.SubLarvae[0].FullName%#%
}
!}

method write body array default = !{
// write array %field%
writer.write<size_t>(%field%.size());
writer.writeBytes(%field%.data(), sizeof(%type0%) * %field%.size() );
!}

method write body map = !{ 
// write map %field%
writer.write<size_t>(%field%.size());
{
    for (%!Larva.TypeDefinition%::iterator it = %field%.begin(); it != %field%.end(); ++it)        
    {
        const %!Larva.SubLarvae[0].TypeDefinition% &%_e_key% = it->first;
        const %!Larva.SubLarvae[0].TypeDefinition% &%_e_value% = it->second;
        
        %#method write body#%_e_key%#%!Larva.SubLarvae[0].FullName%#%
        %#method write body#%_e_value%#%!Larva.SubLarvae[1].FullName%#%
    }
}
!}

## read

method read param = !{const void *data!}
method read returnType = void

method read body =
!{
ByteReader reader(data);

%%
!}

method read body enum = !{%field% = reader.read<%type%>();!}
method read body default = !{%field% = reader.read<%type%>();!}
method read body string = !{%field% = reader.readString();!}

method read body struct = !{ 
%field%.read(reader.getPosition());
reader.skipBytes(%field%.size()); 
!}

method read body array default = !{ 
// read array %field%
size_t s_%field% = reader.read<size_t>();
%field%.resize(s_%field%);
reader.readBytes((char*)%field%.data(), sizeof(%type0%) * s_%field%);
!}

method read body array = !{ 
// read array %field%
size_t s_%field% = reader.read<size_t>();
%field%.resize(s_%field%);

for (size_t i = 0; i < s_%field%; i++)
{
    %!Larva.SubLarvae[0].TypeDefinition% &%_e_name% = %field%[i];
        
    %#method read body#%_e_name%#%!Larva.SubLarvae[0].FullName%#%
}
!}

method read body map = !{ 
// read array %field%
size_t s_%field% = reader.read<size_t>();

for (size_t i = 0; i < s_%field%; i++)
{
    %!Larva.SubLarvae[0].TypeDefinition% %_e_key%;
    %!Larva.SubLarvae[0].TypeDefinition% %_e_value%;
        
    %#method read body#%_e_key%#%!Larva.SubLarvae[0].FullName%#%
    %#method read body#%_e_value%#%!Larva.SubLarvae[1].FullName%#%
    
    %field%[%_e_key%] = %_e_value%;
}
!}
