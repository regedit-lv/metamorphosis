## size

method size param = void
method size returnType = size_t
method size body = 
!{
%body%

return %return%;
!}

method size body return = !{0 %%!}

method size body return enum = !{ + sizeof(%!TypeDefinition%)!}
method size body return default = !{ + sizeof(%!TypeDefinition%)!}
method size body return string = !{ + (2 + %!Name%.size())!}
method size body return struct = !{ + %!Name%.size()!}
method size body return array = !{ + s_%!Name%!}
method size body return array default = !{ + (sizeof(size_t) + sizeof(%type0%) * %!Name%.size())!}
method size body body array default = !{ !}
method size body return map = !{ + s_%!Name%!}

method size body body = !{%%!}

method size body body array = !{
size_t s_%!Name% = sizeof(size_t);
{
    for (size_t i = 0; i < %!Name%.size(); i++)
    {
        %!Larva.SubLarvae[0].TypeDefinition% &%_e_name% = %!Name%[i];
        
        %#method size body body#%_e_name%#%!Larva.SubLarvae[0].FullName%#%
        
        s_%!Name% += 0 %#method size body return#%_e_name%#%!Larva.SubLarvae[0].FullName%#%;
    }
}
!}

method size body return arrayMethod = !{totalSize_%field_id%!}

method size body body map = !{
size_t s_%!Name% = sizeof(size_t);
{
    for (%!Larva.TypeDefinition%::iterator it = %!Name%.begin(); it != %!Name%.end(); ++it)        
    {
        const %!Larva.SubLarvae[0].TypeDefinition% &%_e_key% = it->first;
        const %!Larva.SubLarvae[0].TypeDefinition% &%_e_value% = it->second;
        
        %#method size body body#%_e_key%#%!Larva.SubLarvae[0].FullName%#%
        %#method size body body#%_e_value%#%!Larva.SubLarvae[1].FullName%#%
        
        s_%!Name% += 0 %#method size body return#%_e_key%#%!Larva.SubLarvae[0].FullName%#%
                       %#method size body return#%_e_value%#%!Larva.SubLarvae[1].FullName%#%;
    }
}
!}

## write

method write param = !{void **data!}
method write returnType = size_t

method write body =
!{
ByteWriter writer(*data, size());

%% 

if (*data == NULL)
{
    *data = writer.getData();
    writer.giveBufferOwnership();
}

return writer.getDataSize();
!}

method write body enum = !{writer.write<%!TypeDefinition%>(%!Name%);!}
method write body default = !{writer.write<%!TypeDefinition%>(%!Name%);!}
method write body string = !{writer.writeString(%!Name%);!}

method write body struct = !{ 
void *p_%!Name% = writer.getPosition();
%!Name%.write(&p_%!Name%);
writer.skipBytes(%!Name%.size()); 
!}

method write body array default = !{
// write array %!Name%
writer.write<size_t>(%!Name%.size());
writer.writeBytes(%!Name%.data(), sizeof(%type0%) * %!Name%.size() );
!}

method write body array = !{ 
// write array %!Name%
writer.write<size_t>(%!Name%.size());

for (size_t i = 0; i < %!Name%.size(); i++)
{
    %!Larva.SubLarvae[0].TypeDefinition% &%_e_name% = %!Name%[i];
        
    %#method write body#%_e_name%#%!Larva.SubLarvae[0].FullName%#%
}
!}

method write body array default = !{
// write array %!Name%
writer.write<size_t>(%!Name%.size());
writer.writeBytes(%!Name%.data(), sizeof(%type0%) * %!Name%.size() );
!}

method write body map = !{ 
// write map %!Name%
writer.write<size_t>(%!Name%.size());
{
    for (%!Larva.TypeDefinition%::iterator it = %!Name%.begin(); it != %!Name%.end(); ++it)        
    {
        const %!Larva.SubLarvae[0].TypeDefinition% &%_e_key% = it->first;
        const %!Larva.SubLarvae[0].TypeDefinition% &%_e_value% = it->second;
        
        %#method write body#%_e_key%#%!Larva.SubLarvae[0].FullName%#%
        %#method write body#%_e_value%#%!Larva.SubLarvae[1].FullName%#%
    }
}
!}

## read

method read param = !{const void *data!}
method read returnType = void

method read body =
!{
ByteReader reader(data);

%%
!}

method read body enum = !{%!Name% = reader.read<%!TypeDefinition%>();!}
method read body default = !{%!Name% = reader.read<%!TypeDefinition%>();!}
method read body string = !{%!Name% = reader.readString();!}

method read body struct = !{ 
%!Name%.read(reader.getPosition());
reader.skipBytes(%!Name%.size()); 
!}

method read body array default = !{ 
// read array %!Name%
size_t s_%!Name% = reader.read<size_t>();
%!Name%.resize(s_%!Name%);
reader.readBytes((char*)%!Name%.data(), sizeof(%type0%) * s_%!Name%);
!}

method read body array = !{ 
// read array %!Name%
size_t s_%!Name% = reader.read<size_t>();
%!Name%.resize(s_%!Name%);

for (size_t i = 0; i < s_%!Name%; i++)
{
    %!Larva.SubLarvae[0].TypeDefinition% &%_e_name% = %!Name%[i];
        
    %#method read body#%_e_name%#%!Larva.SubLarvae[0].FullName%#%
}
!}

method read body map = !{ 
// read array %!Name%
size_t s_%!Name% = reader.read<size_t>();

for (size_t i = 0; i < s_%!Name%; i++)
{
    %!Larva.SubLarvae[0].TypeDefinition% %_e_key%;
    %!Larva.SubLarvae[0].TypeDefinition% %_e_value%;
        
    %#method read body#%_e_key%#%!Larva.SubLarvae[0].FullName%#%
    %#method read body#%_e_value%#%!Larva.SubLarvae[1].FullName%#%
    
    %!Name%[%_e_key%] = %_e_value%;
}
!}
