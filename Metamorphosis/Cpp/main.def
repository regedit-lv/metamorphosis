IncludeDeclarationTop = !{ 
#include <vector>
#include <string>
#include <map>
#include <cstdint>
!}

IncludeDefinitionTop = !{
#include "stdafx.h"

#include <sstream>
#include "%@OutputName%.h"
!}

ImportInclude = !{ #include "%name%.h" !}

StructDefinition = !{
struct %!Name% 
{
    %body% 
};
!}

StructDefinitionWithBase = !{
struct  %!Name%  : public  %!BaseName% 
{
    %body% 
};
!}

StructFieldDeclaration = !{ %!TypeDefinition% %!Name%; !}

MethodDeclaration = !{ %returnType% %method%(%param%); !}

MethodDefinition = !{ 
%returnType% %larva%::%method%(%param%)
{
    %body%
}
!}

StaticDefinition =
!{
class %!Name% 
{
public:
    %body% 
};
!}

StaticFieldDeclaration = !{ static %!TypeDefinition% %!Name%; !}
StaticFieldDefinition = !{ %!TypeDefinition% %!Parent.Name%::%!Name%; !}
StaticFieldDefinitionWithValue = !{ %!TypeDefinition% %!Parent.Name%::%!Name% = %!InitialValue%; !}

StaticMethodDeclaration = !{ static %returnType% %method%(%param%); !}

StaticMethodDefinition = !{ 
%returnType% %larva%::%method%(%param%)
{
    %body%
}
!}

ConstructorDeclaration = !{ %!Name%(); !}
ConstructorDefinition = !{ 
%!Name%::%!Name%()
{
    %body%
}
!}

ConstructorWithBaseDeclaration = !{ %!Name%(); !}
ConstructorWithBaseDefinition = !{ 
%!Name%::%!Name%() : %!BaseName%()
{
    %body%
}
!}

FieldInitialisation = !{ %!Name% = %!InitialValueDefinition%; !}

EnumFieldDeclaration = !{ %!Name% , !}
EnumFieldWithValueDeclaration = !{ %!Name% = %!InitialValueDefinition% , !}
EnumValueDeclaration = !{ %!Parent.Name%::%!Name% !}

EnumDefinition = !{
enum class %!Name% : int
{
    %body%
};
!}
