## toXml

method toXml param = !{XmlWriter parentWriter = null!}
method toXml returnType = string

method toXml body direct =
!{
%~default%
%~enum%  
%~string% 
!}

method toXml body =
!{
    StringWriter sw = null;
    XmlWriter writer = null;

    if (parentWriter == null)
    {
        sw = new StringWriter();
        writer = XmlWriter.Create(sw);
        writer.WriteStartDocument();
        writer.WriteStartElement("%!Name%");
    }
    else
    {
        writer = parentWriter;
    }

    // write primitive types
    %direct%

    // write complex types
    %~struct% 
    %~array% 
    
    if (parentWriter == null)
    {
        writer.WriteEndElement();
        writer.Flush();
        string xml = sw.ToString();
        return XElement.Parse(xml).ToString();
    }
    else
    {
        return null;
    }
!}

method toXml body direct default = !{
// %type% %field%
XmlWrapper.WriteAttribute(writer, "%field%", %field%);
!}

method toXml body direct enum = !{
// %type% %field%
XmlWrapper.WriteAttribute(writer, "%field%", %!Larva.TypeDefinition%Helper.getEnumName(%field%));
!}

method toXml body direct string = !{
// %type% %field%
XmlWrapper.WriteAttribute(writer, "%field%", %field%);
!}

method toXml body direct struct = !{
// %field%
%field%.toXml(writer);
!}

method toXml body struct = !{
// %field%
writer.WriteStartElement("%field%");
%field%.toXml(writer);
writer.WriteEndElement();
!}

method toXml body array = !{
// %field%
if (%field% != null)
{
    writer.WriteStartElement("%field%");

    foreach (var %_element% in %field%)
    {
        writer.WriteStartElement("%!Larva.SubLarvae[0].Name%");

        %#method toXml body direct#%_element%#%!Larva.SubLarvae[0].FullName%#%
    
        writer.WriteEndElement();
    }
                   
    writer.WriteEndElement();
}
!}

## fromXml

method fromXml param = !{string xml, XmlReader parentReader = null!}
method fromXml returnType = void

method fromXml body =
!{
    XmlReader reader;
    
    if (parentReader != null)
    {
        reader = parentReader;
    }
    else
    {
        reader = XmlReader.Create(new System.IO.StringReader(xml));
    }
    
    if (!reader.IsStartElement())
    {
        // error must be start element
        return;
    }

    string topName = reader.Name;

    %readDirect%

    // read internal objects
    if (!reader.IsEmptyElement)
    {
        while(reader.Read())
        {
            if (reader.IsStartElement())
            {
                %~struct% 
                %~array% 
            }
            else if (reader.Name == topName && reader.NodeType == XmlNodeType.EndElement)
            {
                break;
            }
        }
    }
!}

method fromXml body readDirect = !{
%~default%
%~enum%  
%~string% 
!}

method fromXml body readDirect default = !{
// %type% %field%
XmlWrapper.ReadAttribute(reader, "%field%", out %field%);
!}

method fromXml body readDirect enum = !{
// %type% %field%
{
    string i_%field%;
    XmlWrapper.ReadAttribute(reader, "%field%", out i_%field%);
    %field% = %!Larva.TypeDefinition%Helper.getEnumValue(i_%field%);
}
!}

method fromXml body readDirect string = !{
// %type% %field%
XmlWrapper.ReadAttribute(reader, "%field%", out %field%);
!}

method fromXml body readDirect struct = !{
// %type% %field%
%field% = new %!Larva.TypeDefinition%();
%field%.fromXml("", reader);
!}

method fromXml body struct = !{ 
// struct %field%
if (reader.Name.ToLower() == "%field%".ToLower())
{
    %field% = new %!Larva.TypeDefinition%();
    %field%.fromXml("", reader);
}
!}

method fromXml body array = !{ 
// read array %field%
if (reader.Name.ToLower() == "%field%".ToLower())
{
    %field% = new %!Larva.TypeDefinition%();
    if (!reader.IsEmptyElement)
    {
        while (reader.Read())
        {
            if (reader.IsStartElement())
            {
                if ("%!Larva.SubLarvae[0].Name%".ToLower() == reader.Name.ToLower())
                {
                    %!Larva.SubLarvae[0].TypeDefinition% sub;

                    %#method fromXml body readDirect#sub#%!Larva.SubLarvae[0].FullName%#%

                    %field%.Add(sub);
                }
            }       
            if (reader.Name.ToLower() == "%field%".ToLower() && reader.NodeType == XmlNodeType.EndElement)
            {
                break;
            }
        }
    }
}
!}
